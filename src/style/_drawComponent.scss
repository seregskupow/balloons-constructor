@function random_element($elements...) {
	@return nth($elements, random(length($elements)));
}
@mixin left {
	left: calc(50% - 90px);
	transform: translateX(-50%) rotate(-30deg);

	&:active {
		transform: translateX(-50%) rotate(-30deg) scale(0.95);
	}
}

@mixin right {
	left: calc(50% + 90px);
	transform: translateX(-50%) rotate(30deg);

	&:active {
		transform: translateX(-50%) rotate(30deg) scale(0.95);
	}
}

@mixin center {
	left: 50%;
	transform: translateX(-50%);

	&:active {
		transform: translateX(-50%) scale(0.95);
	}
}

@mixin f-left {
	left: calc(50% - 40px);
	transform: translateX(-50%) rotate(-30deg);

	&:active {
		transform: translateX(-50%) rotate(-30deg) scale(0.95);
	}
}

@mixin f-right {
	left: calc(50% + 40px);
	transform: translateX(-50%) rotate(30deg);

	&:active {
		transform: translateX(-50%) rotate(30deg) scale(0.95);
	}
}

@mixin c-left {
	left: calc(50% - 30px);
	transform: translateX(-50%) rotate(-12deg);

	&:active {
		transform: translateX(-50%) rotate(-12deg) scale(0.95);
	}
}

@mixin c-right {
	left: calc(50% + 30px);
	transform: translateX(-50%) rotate(12deg);

	&:active {
		transform: translateX(-50%) rotate(12deg) scale(0.95);
	}
}

@mixin svg($num) {
	@if ($num == 1) {
		& .cls-1 {
			fill: darken(#ffbc04, 10%);
		}
		& .cls-2 {
			fill: #ffbc04;
		}
		& .cls-3 {
			fill: lighten(#ffbc04, 20%);
		}
	}

	@if ($num == 2) {
		& .cls-1 {
			fill: darken(#00be5f, 10%);
		}
		& .cls-2 {
			fill: #00be5f;
		}
		& .cls-3 {
			fill: lighten(#00be5f, 20%);
		}
	}

	@if ($num == 3) {
		& .cls-1 {
			fill: rgb(1, 113, 141);
		}
		& .cls-2 {
			fill: #0098be;
		}
		& .cls-3 {
			fill: rgb(102, 224, 255);
		}
	}
	@if ($num == 4) {
		& .cls-1 {
			fill: rgb(165, 98, 154);
		}
		& .cls-2 {
			fill: #cf74c0;
		}
		& .cls-3 {
			fill: rgb(228, 172, 218);
		}
	}
	@if ($num == 5) {
		& .cls-1 {
			fill: rgb(148, 61, 61);
		}
		& .cls-2 {
			fill: #c55050;
		}
		& .cls-3 {
			fill: rgb(236, 152, 152);
		}
	}
	@if ($num == 6) {
		& .cls-1 {
			fill: rgb(113, 59, 144);
		}
		& .cls-2 {
			fill: #9a50c5;
		}
		& .cls-3 {
			fill: rgb(184, 140, 209);
		}
	}
}
$lefts: (2, 5, 8, 11, 14, 17, 20, 23, 26, 29);
$rights: (3, 6, 9, 12, 15, 18, 21, 24, 27, 30);
$centers: (1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31);
$Llefts: (2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30);
$Rrights: (1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31);

.draw-component-wrapper {
	width: 90%;
	// height: 500px;
	margin: 0 auto;
	padding-top: 20px;
	padding-bottom: 20px;

	& .plane {
		position: relative;

		width: 100%;
		height: 100%;

		background: white;

		border-radius: 20px;

		transition: all 0.3s ease;

		box-shadow: $nearShadow;

		& .balloons-container {
			position: relative;

			width: 60%;
			height: 100%;

			margin: 0 auto;
			& .balloon {
				position: absolute;

				left: 50%;

				transform: translateX(-50%);

				background-color: transparent;
				border: none;

				&:active {
					transition: 0.1s ease;
				}

				& .balloon-inner {
					display: flex;
					justify-content: center;
					align-items: center;

					height: 100%;
				}
				&:hover {
					cursor: pointer;
					z-index: 32 !important;
				}
				& .balloon-img {
					transition: all 0.3s ease-in-out;

					opacity: 0.9;
					&:hover {
						transform: scale(1.09);
						// opacity: 1;
					}
				}
				& svg {
					transition: all 0.3s ease-in-out;

					opacity: 0.9;

					&:hover {
						transform: scale(1.09);
						opacity: 1;
					}
				}
			}
			@media (min-width: 768px) {
				width: 40%;
			}
		}
		& .bouquet {
			& .balloon {
				width: 22%;
				min-width: 100px;
				& img {
					width: 100%;
					height: auto;
				}
				& svg {
					width: 90%;
					height: auto;
				}
				& ellipse:hover {
					fill: red !important;
					cursor: pointer;
					//transform:translateZ(30px);
				}

				@each $elem in $lefts {
					&:nth-child(#{$elem}) {
						bottom: 30px * $elem;
						@include left;
						z-index: 31-$elem;
						@include svg(random(6));
					}
				}
				@each $elem in $lefts {
					&:nth-child(#{$elem + 1 }) {
						bottom: 30px * $elem;
						@include right;
						z-index: 31-$elem;
						@include svg(random(6));
					}
				}
				@each $elem in $centers {
					&:nth-child(#{$elem}) {
						bottom: 30px * $elem;
						@include center;
						z-index: 31-$elem;
						@include svg(random(6));
					}
				}
			}
		}
		& .fontaine {
			& .balloon {
				width: 22%;
				min-width: 100px;
				& img {
					width: 100%;
					height: auto;
				}
				& svg {
					width: 90%;
					height: auto;
				}
				& ellipse:hover {
					fill: red !important;
					cursor: pointer;
					//transform:translateZ(30px);
				}
				@each $elem in $Llefts {
					&:nth-child(#{$elem}) {
						bottom: 30px * $elem;
						@include f-left;
						z-index: 31-$elem;
						@include svg(random(6));
					}
				}
				@each $elem in $Rrights {
					&:nth-child(#{$elem}) {
						bottom: 30px * $elem;
						@include f-right;
						z-index: 31-$elem;
						@include svg(random(6));
					}
				}
			}
		}
		& .cascade {
			& .balloon {
				width: 22%;
				min-width: 100px;
				& img {
					width: 100%;
					height: auto;
				}
				& svg {
					width: 90%;
					height: auto;
				}
				& ellipse:hover {
					fill: red !important;
					cursor: pointer;
					//transform:translateZ(30px);
				}
				&:nth-last-child() {
					left: 50% !important;
					transform: translateX(-50%) !important;
					& ellipse {
						fill: rgb(0, 2, 1) !important;
					}
				}
				@each $elem in $Llefts {
					&:nth-child(#{$elem}) {
						bottom: 30px * $elem;
						@include c-left;
						z-index: 31-$elem;
						@include svg(random(6));
					}
				}
				@each $elem in $Rrights {
					&:nth-child(#{$elem}) {
						bottom: 30px * $elem;
						@include c-right;
						z-index: 31-$elem;
						@include svg(random(6));
					}
				}
			}
		}
		& .tree {
			width: 300px;

			margin: 0 auto;
			padding-top: 60px;

			transform: scale(1.4);

			@media screen and (min-width: 1600px) {
				transform: scale(1.5);
			}
			&::before,
			& .tree-helper::before {
				content: "";
				float: var(--d, left);

				height: 100%;
				width: 50%;
				shape-outside: linear-gradient(to top var(--d, left), transparent 50%, #fff 0);
				/* To illustrate */
				// background   :linear-gradient(to top left,transparent 50%,yellow 0);
			}
			& .tree-helper {
				height: 100%;
				&::before {
					--d: right;
					/* To illustrate */
					// background   :linear-gradient(to top right,transparent 50%,grey 0);
				}
			}
			& .balloon {
				display: inline-block;
				position: static;
				width: 26px;
				height: 45px;
				transform: translate(0, 0);

				& img {
					width: 90%;
					height: auto;
					margin: 0 auto;
				}
				& svg {
					width: 90%;
					height: auto;
					margin: 0 auto;
				}
				& ellipse:hover {
					fill: red !important;
					cursor: pointer;
					//transform:translateZ(30px);
				}
			}
		}
		& .figure {
			& .balloon {
				@include center;
				top: 30%;
				& svg {
					height: 260px;
				}
			}
		}
		& .numeral {
			& .balloon {
				@include center;
				top: 30%;
				& svg {
					height: 260px;
					& .cls-2 {
						fill: rgb(165, 98, 154);
					}
					& .cls-3 {
						fill: rgb(207, 116, 192);
					}
					& .cls-4 {
						fill: rgb(228, 172, 218);
					}
					& path {
						// fill: pink;
					}
				}
			}
		}
		& .walker {
			& .balloon {
				@include center;
				top: 45%;
				& svg {
					height: 260px;
				}
			}
		}
		& .number {
			& .balloon {
				@include center;
				top: 30%;
				& svg {
					height: 210px;

					& path {
						// fill: rgb(94, 255, 0);
					}
				}
				&:nth-child(1) {
					& svg {
						& .cls-2 {
							fill: rgb(1, 113, 141);
						}
						& .cls-3 {
							fill: rgb(21, 185, 226);
						}
						& .cls-4 {
							fill: rgb(102, 224, 255);
						}
					}
					left: 10%;
				}
				&:nth-child(2) {
					left: 90%;
				}
			}
		}
	}
}
